name: Release

on:
  push:
    tags:
      - 'v*'  # Triggers only on tags starting with 'v' (e.g., v1.2.3)

jobs:
  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Extract version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

      - name: Find previous tag
        id: get_previous_tag
        run: |
          PREV_TAG=$(git describe --tags --abbrev=0 $(git rev-list --tags --skip=1 --max-count=1) 2>/dev/null || echo "None")
          echo "PREVIOUS_TAG=$PREV_TAG" >> $GITHUB_ENV
          
      - name: Generate changelog
        run: |
          echo "## Changes in v${VERSION}" > release_notes.txt
          
          if [ "$PREVIOUS_TAG" = "None" ]; then
            echo "First release - showing full commit history:" >> release_notes.txt
            git log --pretty=format:"- %h %s" >> release_notes.txt
          else
            echo "Changes since $PREVIOUS_TAG:" >> release_notes.txt
            git log $PREVIOUS_TAG..HEAD --pretty=format:"- %h %s" >> release_notes.txt
          fi

      - name: Display changelog (for debugging)
        run: cat release_notes.txt

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.VERSION }}
          name: Release v${{ env.VERSION }}
          body_path: release_notes.txt  # âœ… Uses generated commit history
          draft: false
          prerelease: false

      - name: Auto-increment version
        id: bump_version
        run: |
          IFS='.' read -r MAJOR MINOR PATCH <<< "${VERSION}"
          PATCH=$((PATCH + 1))
          NEW_VERSION="v$MAJOR.$MINOR.$PATCH"
          echo "NEW_VERSION=${NEW_VERSION}" >> $GITHUB_ENV
          echo "Next version: $NEW_VERSION"

      - name: Push new version tag
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git tag ${{ env.NEW_VERSION }}
          git push origin ${{ env.NEW_VERSION }}